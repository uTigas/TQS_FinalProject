version: "3.8"

services:
  neo4j:
    image: neo4j:latest
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      - NEO4J_AUTH=none
    volumes:
      - neo-data:/var/lib/neo4j/data
    networks:
      - my_network

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=$POSTGRES_DATABASE
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - my_network

  app:
    depends_on:
      - postgres
      - neo4j
    build: ./backend/chuchu
    restart: on-failure
    env_file: ./.env
    ports:
      - "$SPRING_LOCAL_PORT:8080"
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - TESTCONTAINERS_RYUK_DISABLED=true
      - TESTCONTAINERS_HOST_OVERRIDE=host.docker.internal
      - SPRING_NEO4J_URI=bolt://neo4j:7687
      - SPRING_APPLICATION_JSON={"ionic.port":"", "spring.port":"", "spring.data.neo4j.uri":"bolt://neo4j:7687", "spring.datasource.url":"jdbc:postgresql://postgres:5432/${POSTGRES_DATABASE}?sslmode=disable"}
      
    volumes:
      - .m2:/root/.m2
      - /var/run/docker.sock:/var/run/docker.sock
    stdin_open: true
    tty: true
    networks:
      - my_network
    
  ionic:
    build: ./frontend/portal
    ports:
      - "8100:8100"
    networks:
      - my_network
  
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
      - ionic
    networks:
      - my_network
  
networks:
  my_network:
    driver: bridge

volumes:
  pg-data:
  neo-data: